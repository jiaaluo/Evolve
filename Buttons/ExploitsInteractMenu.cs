using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using ButtonApi;
using UnityEngine;
using UnityEngine.UI;
using Evolve.Utils;
using Evolve.Wrappers;
using VRC.SDKBase;
using VRC.SDK3.Components;

namespace Evolve.Buttons
{
    class ExploitsInteractMenu
    {
        public static QMNestedButton ThisMenu;
        public static void Initialize()
        {
            ThisMenu = new QMNestedButton(EvolveInteract.ThisMenu, 0, 0.25f, "Exploits", "Exploits Menu");
            ThisMenu.getMainButton().getGameObject().GetComponent<RectTransform>().sizeDelta /= new Vector3(1, 2);

            new QMToggleButton(ThisMenu, 1, 0, "Pickups Orbit", () =>
            {
                Settings.TargetItemsOrbit = true;
                var Player = Wrappers.Utils.QuickMenu.SelectedVRCPlayer();
                Exploits.Exploits.SelectedTarget = Player;
            }, "Disabled", () =>
            {
                Settings.TargetItemsOrbit = false;
                Exploits.Exploits.SelectedTarget = null;
            }, "Will make all pickups orbit around the selected player");

            new QMToggleButton(ThisMenu, 2, 0, "Spam pickups\n(Head)", () =>
            {
                Exploits.Exploits.Bone = "Head";
                Settings.SpamPickupsTarget = true;
                var Player = Wrappers.Utils.QuickMenu.SelectedVRCPlayer();
                Exploits.Exploits.SelectedTarget = Player;
            }, "Disabled", () =>
            {
                Exploits.Exploits.Bone = "None";
                Settings.SpamPickupsTarget = false;
                Exploits.Exploits.SelectedTarget = null;
            }, "Will teleport all pickups on the player's head till you turn it off");

            new QMToggleButton(ThisMenu, 3, 0, "Spam pickups\n(Feet)", () =>
            {
                Exploits.Exploits.Bone = "Feet";
                Settings.SpamPickupsTarget = true;
                var Player = Wrappers.Utils.QuickMenu.SelectedVRCPlayer();
                Exploits.Exploits.SelectedTarget = Player;
            }, "Disabled", () =>
            {
                Exploits.Exploits.Bone = "None";
                Settings.SpamPickupsTarget = false;
                Exploits.Exploits.SelectedTarget = null;
            }, "Will teleport all pickups on the player's feet till you turn it off");

            new QMSingleButton(ThisMenu, 1, 1, "Teleport pickups", () =>
            {
                var Player = Wrappers.Utils.QuickMenu.SelectedVRCPlayer();

                List<VRC_Pickup> AllPickups = UnityEngine.Object.FindObjectsOfType<VRC_Pickup>().ToList<VRC_Pickup>();
                if (AllPickups != null)
                {
                    foreach (VRC_Pickup obj in AllPickups)
                    {
                        Functions.TakeOwnershipIfNecessary(obj.gameObject);
                        obj.transform.position = Player.field_Private_VRCPlayerApi_0.GetBonePosition(HumanBodyBones.Head);
                        obj.transform.LookAt(Player.transform);
                    }
                }
                List<VRCPickup> AllUdonPickups = UnityEngine.Object.FindObjectsOfType<VRCPickup>().ToList<VRCPickup>();
                if (AllUdonPickups != null)
                {
                    foreach (VRC_Pickup obj in AllPickups)
                    {
                        Functions.TakeOwnershipIfNecessary(obj.gameObject);
                        obj.transform.position = Player.field_Private_VRCPlayerApi_0.GetBonePosition(HumanBodyBones.Head);
                        obj.transform.LookAt(Player.transform);
                    }
                }
            }, "Will teleport every pîckups on the map to the selected player");

            new QMSingleButton(ThisMenu, 2, 1, "Drop portal", () =>
            {
                var Player = Wrappers.Utils.QuickMenu.SelectedVRCPlayer();
                var Worlds = new List<string>()
                {
                    "wrld_4432ea9b-729c-46e3-8eaf-846aa0a37fdd",
                    "wrld_4a65ba53-d8df-40a7-b67d-30c63bff0e95",
                    "wrld_a6e75419-0f76-402b-966e-3dc8b79a6b30",
                    "wrld_7e10376a-29b6-43af-ac5d-6eb72732e90c",
                    "wrld_5b89c79e-c340-4510-be1b-476e9fcdedcc",
                    "wrld_9c40ca9d-216d-46d1-baa7-e1117df7d026",
                    "wrld_22f799b8-7c8d-4302-aee3-35686dfb2590",
                };
                Functions.DropPortal(Worlds[new System.Random().Next(0, Worlds.Count - 1)], Utils.Utilities.RandomNumberString(5), new System.Random().Next(int.MinValue, int.MaxValue), Player.transform.position + Player.transform.forward * 1.5f, Quaternion.identity);
            }, "Will teleport every pîckups on the map to the selected player");
        }
    }
}
